version: '2'
services:
    bpremiser:
        build:
            context: ./PREMISer/
            args:
                PORT: "${PREMISER_INTERNAL_PORT}"
                WORKERS: "${NUM_WORKERS}"
                TIMEOUT: "${TIMEOUT}"
        environment:
             - PREMISER_CONFIG=/code/config.py
    premiser:
        build:
            context: ./loadbalancer/
            args:
                UPSTREAM: "http://bpremiser:${PREMISER_INTERNAL_PORT}"
                LISTEN: "${PREMISER_INTERNAL_PORT}"
                REFRESH: "${REFRESH}"
                TIMEOUT: "${TIMEOUT}"
                MAX_FSIZE: "${MAX_FSIZE}"
        depends_on:
            - bpremiser 
    bmaterialsuite_endpoint:
        build:
            context: ./ldr_materialsuite_endpoint/
            args:
                PORT: "${MATERIALSUITE_ENDPOINT_INTERNAL_PORT}"
                WORKERS: "${NUM_WORKERS}"
                TIMEOUT: "${TIMEOUT}"
        environment:
             - MATERIALSUITE_ENDPOINT_CONFIG=/code/config.py
        volumes:
            - ${LTS_PATH}:/lts 
            - ${PREMIS_PATH}:/premis
    materialsuite_endpoint:
        build:
            context: ./loadbalancer/
            args:
                UPSTREAM: "http://bmaterialsuite_endpoint:${MATERIALSUITE_ENDPOINT_INTERNAL_PORT}"
                LISTEN: "${MATERIALSUITE_ENDPOINT_INTERNAL_PORT}"
                REFRESH: "${REFRESH}"
                TIMEOUT: "${TIMEOUT}"
                MAX_FSIZE: "${MAX_FSIZE}"
    bidnest:
        build:
            context: ./idnest/
            args:
                PORT: "${IDNEST_INTERNAL_PORT}"
                WORKERS: "${NUM_WORKERS}"
                TIMEOUT: "30"
        depends_on:
            - mongo
        environment:
            - IDNEST_CONFIG=/code/config.py
    idnest:
        build:
            context: ./loadbalancer/
            args:
                UPSTREAM: "http://bidnest:${IDNEST_INTERNAL_PORT}"
                LISTEN: "${IDNEST_INTERNAL_PORT}"
                REFRESH: "${REFRESH}"
                TIMEOUT: "${TIMEOUT}"
                MAX_FSIZE: "${MAX_FSIZE}"
        depends_on:
            - bidnest
    bingress:
        build:
            context: ./ldr_ingress/
            args:
                PORT: "${INGRESS_INTERNAL_PORT}"
                WORKERS: "${NUM_WORKERS}"
                TIMEOUT: "${TIMEOUT}"
        depends_on:
            - idnest
            - premiser
            - materialsuite_endpoint
        environment:
            - INGRESS_CONFIG=/code/config.py
    ingress:
        build: 
            context: ./loadbalancer/
            args:
                UPSTREAM: "http://bingress:${INGRESS_INTERNAL_PORT}"
                LISTEN: "${INGRESS_INTERNAL_PORT}"
                REFRESH: "${REFRESH}"
                TIMEOUT: "${TIMEOUT}"
                MAX_FSIZE: "${MAX_FSIZE}"
        depends_on:
            - bingress
    mongo:
        image: "mongo"
        volumes:
            - ${DB_PATH}:/data/db
    bunifier:
        build:
            context: ./unifier/
            args:
                IDNEST_INTERNAL_PORT: "${IDNEST_INTERNAL_PORT}"
                INGRESS_INTERNAL_PORT: "${INGRESS_INTERNAL_PORT}"
                PREMISER_INTERNAL_PORT: "${PREMISER_INTERNAL_PORT}"
                MATERIALSUITE_ENDPOINT_INTERNAL_PORT: "${MATERIALSUITE_ENDPOINT_INTERNAL_PORT}"
                ACQ_INTERFACE_INTERNAL_PORT: "${ACQ_INTERFACE_INTERNAL_PORT}"
                LISTEN: "${UNIFIER_INTERNAL_PORT}"
                REFRESH: "${REFRESH}"
                TIMEOUT: "${TIMEOUT}"
                MAX_FSIZE: "${MAX_FSIZE}"
        depends_on:
            - idnest
            - ingress
            - materialsuite_endpoint
            - premiser
            - acq_interface
    unifier:
        build:
            context: ./loadbalancer/
            args:
                UPSTREAM: "http://bunifier:${UNIFIER_INTERNAL_PORT}"
                LISTEN: "${UNIFIER_INTERNAL_PORT}"
                REFRESH: "${REFRESH}"
                TIMEOUT: "${TIMEOUT}"
                MAX_FSIZE: "${MAX_FSIZE}"
        ports: 
            - "${UNIFIER_EXTERNAL_PORT}:${UNIFIER_INTERNAL_PORT}"
        depends_on:
            - bunifier
    bacq_interface:
        build:
            context: ./ldracquisitions_interface/
            args:
                LISTEN: "${ACQ_INTERFACE_INTERNAL_PORT}"
                REFRESH: "${REFRESH}"
                TIMEOUT: "${TIMEOUT}"
                MAX_FSIZE: "${MAX_FSIZE}"
    acq_interface:
        build: 
            context: ./loadbalancer/
            args:
                UPSTREAM: "http://bacq_interface:${ACQ_INTERFACE_INTERNAL_PORT}"
                LISTEN: "${ACQ_INTERFACE_INTERNAL_PORT}"
                REFRESH: "${REFRESH}"
                TIMEOUT: "${TIMEOUT}"
                MAX_FSIZE: "${MAX_FSIZE}"
        depends_on:
            - bacq_interface
